// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "due_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
	}
	// TaskAssignmentsColumns holds the columns for the "task_assignments" table.
	TaskAssignmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "completed"}, Default: "pending"},
		{Name: "assigned_at", Type: field.TypeTime},
		{Name: "task_id", Type: field.TypeUint64},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// TaskAssignmentsTable holds the schema information for the "task_assignments" table.
	TaskAssignmentsTable = &schema.Table{
		Name:       "task_assignments",
		Columns:    TaskAssignmentsColumns,
		PrimaryKey: []*schema.Column{TaskAssignmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_assignments_tasks_assignments",
				Columns:    []*schema.Column{TaskAssignmentsColumns[3]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "task_assignments_users_assignments",
				Columns:    []*schema.Column{TaskAssignmentsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TasksTable,
		TaskAssignmentsTable,
		UsersTable,
	}
)

func init() {
	TaskAssignmentsTable.ForeignKeys[0].RefTable = TasksTable
	TaskAssignmentsTable.ForeignKeys[1].RefTable = UsersTable
}
